services:
  mysql:
    image: mysql:8
    container_name: ${APPLICATION_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "${CONTAINER_DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - external-net

  member-service:
    image: ${DOCKER_IMAGE}:dev
    container_name: ${APPLICATION_NAME}
    ports:
      - "${APPLICATION_PORT}:${APPLICATION_PORT}"
    env_file:
      - .env
    networks:
      - external-net
    depends_on:
      - mysql
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    env_file:
      - .env
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    volumes:
      - minio_data:/data
    networks:
      - external-net

  minio-init: # minio bucket 생성 및 업로드/다운로드 권한 부여
    image: minio/mc
    container_name: init_minio
    env_file:
      - .env
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set $MINIO_ALIAS $MINIO_HOST:$MINIO_PORT $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
        mc mb $MINIO_ALIAS/$MINIO_BUCKET || true;
        mc anonymous set public $MINIO_ALIAS/$MINIO_BUCKET;
      "
    networks:
      - external-net

volumes:
  mysql_data:
  minio_data:

networks:
  external-net:
    external: true
    name: ${MMB_DOCKER_NETWORK}
